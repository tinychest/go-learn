package _command

/*
【命令模式】
将请求（命令）封装为一个对象，使用不同的请求参数化其他对象，支持请求请求（命令）的排队执行、记录日志、撤销等

【实现】
把函数封装成对象，实现相同的接口，使其可以通过参数传递
在 Go 中函数可以直接当作参数传递，并且可以命名函数为一个类型，所以我们不必使用对象来实现

【场景】
用来控制命令的执行，比如异步，延迟、排队执行命令、撤销重做命令、存储命令、给命令记录日志等

【对比策略模式】
命令模式：不同的命令包含了不同的目的和功能，不能够相互替换（不同的事件执行不同的命令）
策略模式：不同的策略是为了达到相同目的的不同实现，它们之间可以相互替换（不同配置或者参数使用不同的算法）
*/
