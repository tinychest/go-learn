package generate

// 一、简介
// Go 在 1.4 版本引入 go generate，常用于文件生成，官方博客中有一篇关于 Stringer 可以为枚举自动实现 Stringer 方法
//
// go generate 回扫描 .go 源码文件中的 【//go:generate command args...】，并执行
// 有如下几个注意点
// 1.命令是为了更新或创建 Go 源码文件的
// 2.command 必须是可执行命令（就是直接源码所在目录下执行命令能够成功的）
// 3.command 的多个参数，如果被双引号引起来，将被视为一个参数
// 4.go generate 必须手动执行，不会随着 go build、go test、go run 命令的执行而自动执行
// 5.为了让别人或者 IDE 识别代码是通过 go generate 生成的，请在生成的代码中添加注释（一般放在文件开头），如
// 	Code generated by XXX DO NOT EDIT
// 6.go generate 执行时，回自动注入以下环境变量
// 	$GOARCH 系统架构: arm, amd64 等
// 	$GOOS 操作系统: linux, windows 等
// 	$GOFILE 当前执行的命令所处的文件名
// 	$GOLINE 当前执行的命令在文件中的行号
// 	$GOPACKAGE 执行的命令所处的文件的包名
// 	$DOLLAR $ 符号
//
// 二、命令参数
// go generate -n：打印当前目录下所有文件中将要被执行的命令(实际不会执行)
// go generate -x：查看执行的命令
// go generate -v：对当前包下的Go文件进行处理, 并打印已被检索处理的文件
// go generate -run：正则匹配扫描执行 go generate
//
// 三、举例
//go:generate go mod tidy
// 执行【go generate && bee run】 等同于 执行【go mod tidy + bee run】
